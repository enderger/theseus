use eyre::{EyreHandler, Report, Result};
use std::error::Error;
use paris::formatter::LogIcon;

#[derive(Debug)]
pub struct Handler;

impl EyreHandler for Handler {
    fn debug(
        &self,
        error: &(dyn Error + 'static),
        f: &mut core::fmt::Formatter<'_>,
    ) -> core::fmt::Result {
        use core::fmt::Write as _;

        if f.alternate() {
            return core::fmt::Debug::fmt(error, f);
        }

        paris::formatter:
        writeln!("{}", LogIcon::Cross)
    }
}
